// Code generated by "stringer -linecomment -output token_string.go -type TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Error-0]
	_ = x[Reserved-1]
	_ = x[Identifier-2]
	_ = x[String-3]
	_ = x[Float-4]
	_ = x[Integer-5]
	_ = x[Asterisk-6]
	_ = x[Comma-7]
	_ = x[Semicolon-8]
	_ = x[Whitespace-9]
	_ = x[NewLine-10]
	_ = x[EOLComment-11]
	_ = x[Comment-12]
	_ = x[EndOfFile-13]
}

const _TokenType_name = "Syntax ErrorReserved WordIdentifierStringFloating Point NumberIntegerAsterisk (*)Comma (,)Semicolon (;)WhitespaceNew LineEnd of Line CommentCommentEnd of File"

var _TokenType_index = [...]uint8{0, 12, 25, 35, 41, 62, 69, 81, 90, 103, 113, 121, 140, 147, 158}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
